<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yuecchu.github.io/</id>
    <title>Yuechu</title>
    <updated>2022-04-01T13:31:46.127Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yuecchu.github.io/"/>
    <link rel="self" href="https://yuecchu.github.io/atom.xml"/>
    <subtitle>这个人很懒，什么也没有写。。</subtitle>
    <logo>https://yuecchu.github.io/images/avatar.png</logo>
    <icon>https://yuecchu.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Yuechu</rights>
    <entry>
        <title type="html"><![CDATA[Actf[2020]新生赛_easyre writeup]]></title>
        <id>https://yuecchu.github.io/post/actf2020xin-sheng-sai-_easyre-writeup/</id>
        <link href="https://yuecchu.github.io/post/actf2020xin-sheng-sai-_easyre-writeup/">
        </link>
        <updated>2022-04-01T07:22:27.000Z</updated>
        <content type="html"><![CDATA[<h2 id="actf2020新生赛-easyre">ACTF[2020]新生赛 easyre</h2>
<ol>
<li>
<p>首先拖进ExeinfoPE查壳，发现为 UPX3.95</p>
</li>
<li>
<p>使用OD进行脱壳</p>
</li>
<li>
<p>脱壳后发现程序无法运行，且无法用ImpRec修复</p>
</li>
<li>
<p>直接拖入Ida，F5反编译，看到代码如下<br>
int __cdecl main(int argc, const char **argv, const char **envp)<br>
{<br>
_BYTE v4[12]; // [esp+12h] [ebp-2Eh] BYREF<br>
_DWORD v5[3]; // [esp+1Eh] [ebp-22h]<br>
char v6[5]; // [esp+2Ah] [ebp-16h] BYREF<br>
int v7; // [esp+2Fh] [ebp-11h]<br>
int v8; // [esp+33h] [ebp-Dh]<br>
int v9; // [esp+37h] [ebp-9h]<br>
char v10; // [esp+3Bh] [ebp-5h]<br>
int i; // [esp+3Ch] [ebp-4h]</p>
<p>sub_401A10();<br>
qmemcpy(v4, &quot;<em>F'&quot;N,&quot;(I?+@&quot;, sizeof(v4));<br>
sub_401C80(aPleaseInput);<br>
sub_401C88(&quot;%s&quot;, v6);<br>
if ( v6[0] != 'A' || v6[1] != 'C' || v6[2] != 'T' || v6[3] != 'F' || v6[4] != '{' || v10 != '}' )<br>
return 0;<br>
v5[0] = v7;<br>
v5[1] = v8;<br>
v5[2] = v9;<br>
for ( i = 0; i &lt;= 11; ++i )<br>
{<br>
if ( v4[i] != byte_402000[</em>((char *)v5 + i) - 1] )<br>
return 0;<br>
}<br>
sub_401C80(aYouAreCorrect);<br>
return 0;<br>
}</p>
</li>
<li>
<p>可发现flag格式为  <strong>ACTF{}</strong>，由for循环可知flag长度为12</p>
</li>
<li>
<p>同时可以看出flag为v6到v10存储，其中v7, v8, v9为int类型，故v7-v9分别存储4位</p>
</li>
<li>
<p>从 if 中判断为利用 v5 从 byte_402000 中选取数据与v4进行比对</p>
</li>
<li>
<p>双击byte_402000，可看到其存储内容为 （**~**这个符号千万不可落下）</p>
</li>
</ol>
<blockquote>
<p>~}|{zyxwvutsrqponmlkjihgfedcba_^][ZYXWVUTSRQPONMLKJIHGFEDCBA@?&gt;=&lt;;:9876543210/.-,+*)(',27h,'&amp;%$# !&quot;`</p>
</blockquote>
<ol start="9">
<li>编写脚本<br>
key = r'~}|{zyxwvutsrqponmlkjihgfedcba`_^][ZYXWVUTSRQPONMLKJIHGFEDCBA@?&gt;=&lt;;:9876543210/.-,+*)(' + chr(0x27) + '&amp;%$# !&quot;'<br>
v5 = []<br>
v4 = '*F'&quot;N,&quot;(I?+@'  # v4内容<br>
flag = ''<br>
for i in v4:<br>
v5.append(key.find(i) + 1)<br>
for i in v5:<br>
flag += chr(i)<br>
print('flag{' + flag + '}')</li>
<li>运行即得到flag</li>
</ol>
<blockquote>
<p>flag{U9X_1S_W6@T?}</p>
</blockquote>
]]></content>
    </entry>
</feed>